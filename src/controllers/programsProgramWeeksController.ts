/**
 * Workout Creator APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ProgramsWeeksResponse,
  programsWeeksResponseSchema,
} from '../models/programsWeeksResponse';
import {
  ProgramsWeeksResponse1,
  programsWeeksResponse1Schema,
} from '../models/programsWeeksResponse1';
import { Week, weekSchema } from '../models/week';
import { number } from '../schema';
import { BaseController } from './baseController';
import { ProgramsWeeks400Error } from '../errors/programsWeeks400Error';
import { ProgramsWeeks404Error } from '../errors/programsWeeks404Error';

export class ProgramsProgramWeeksController extends BaseController {
  /**
   * @param programId
   * @return Response from the API call
   */
  async getWeeksForProgram(
    programId: number,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ProgramsWeeksResponse>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({ programId: [programId, number()] });
    req.appendTemplatePath`/programs/${mapped.programId}/weeks`;
    req.throwOn(404, ProgramsWeeks404Error, 'Program not found');
    req.authenticate(false);
    return req.callAsJson(programsWeeksResponseSchema, requestOptions);
  }

  /**
   * @param programId
   * @param body
   * @return Response from the API call
   */
  async addWeekToProgram(
    programId: number,
    body: Week,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ProgramsWeeksResponse1>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      programId: [programId, number()],
      body: [body, weekSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/programs/${mapped.programId}/weeks`;
    req.throwOn(400, ProgramsWeeks400Error, 'Bad request');
    req.throwOn(404, ProgramsWeeks404Error, 'Program not found');
    req.authenticate([{ bearerAuth: true }]);
    return req.callAsJson(programsWeeksResponse1Schema, requestOptions);
  }
}
